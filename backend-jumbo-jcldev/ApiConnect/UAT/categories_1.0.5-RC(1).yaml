---
swagger: "2.0"
info:
  x-ibm-name: "categories"
  title: "Categories"
  version: "1.0.5-RC"
schemes:
- "https"
host: "$(catalog.host)"
basePath: "/categories/r1/v1"
consumes:
- "application/json"
produces:
- "application/json"
securityDefinitions:
  x-ibm-client-secret:
    type: "apiKey"
    description: ""
    in: "header"
    name: "X-IBM-Client-Secret"
  clientIdHeader:
    type: "apiKey"
    in: "header"
    name: "X-IBM-Client-Id"
security:
- clientIdHeader: []
  x-ibm-client-secret: []
x-ibm-configuration:
  testable: true
  enforced: true
  cors:
    enabled: true
  assembly:
    execute:
    - set-variable:
        title: "set-api-variables"
        actions:
        - set: "api_version"
          value: "v1"
        - set: "api_region"
          value: "r1"
    - set-variable:
        title: "set-credentials"
        actions:
        - set: "api_user"
          value: "cencoappuser"
        - set: "api_pass"
          value: "HjztW7dQL7Y8XJ5cZbpfgMHb"
    - set-variable:
        title: "set-base-url"
        actions:
        - set: "base-url"
          value: "cencoqa-category-service.mybluemix.net"
    - operation-switch:
        title: "operation-switch"
        case:
        - operations:
          - verb: "get"
            path: "/categories"
          execute:
          - invoke:
              target-url: "https://$(base-url)/category"
              password: "$(api_pass)"
              username: "$(api_user)"
        - operations:
          - verb: "get"
            path: "/category/{idCategory}"
          execute:
          - invoke:
              target-url: "https://$(base-url)/category/$(request.parameters.idCategory)"
              password: "$(api_pass)"
              username: "$(api_user)"
        - operations:
          - verb: "get"
            path: "/category/filter/fields"
          execute:
          - invoke:
              target-url: "https://$(base-url)/category/filter/fields?filter=$(request.parameters.filter)&q=$(request.parameters.q)"
              password: "$(api_pass)"
              username: "$(api_user)"
        otherwise: []
        version: "1.0.0"
    - if:
        title: "if"
        condition: "$(message.status.code) !== 200 && $(message.status.code) !== 206"
        execute:
        - gatewayscript:
            title: "gatewayscript"
            source: "\nvar info = '';\nvar nodeList = apim.getvariable('message.body')\n\
              \napim.error('MyError', $(message.status.code), '$(message.status.reason)',\
              \ nodeList);"
    - operation-switch:
        title: "operation-switch"
        case:
        - operations:
          - verb: "get"
            path: "/categories"
          execute:
          - map:
              title: "map"
              inputs: {}
              outputs:
                output:
                  schema:
                    $ref: "#/definitions/categoriesResponse"
                  variable: "message.body"
                  content: "application/json"
              actions:
              - set: "output.categories"
                default: "$(message.body)"
              - set: "output.metadata.requestTime"
                default: "$(request.date)"
              - set: "output.metadata.results"
                default: "$(message.body.length)"
              - set: "output.metadata.region"
                default: "$(api_region)"
              - set: "output.metadata.version"
                default: "$(api_version)"
        - operations:
          - verb: "get"
            path: "/category/{idCategory}"
          execute:
          - map:
              title: "map"
              inputs:
                input:
                  schema:
                    type: "object"
                  variable: "message.body"
              outputs:
                output:
                  schema:
                    $ref: "#/definitions/categoryResponse"
                  variable: "message.body"
                  content: "application/json"
              actions:
              - set: "output.metadata.requestTime"
                default: "$(request.date)"
              - set: "output.metadata.region"
                default: "$(api_region)"
              - set: "output.metadata.version"
                default: "$(api_version)"
              - set: "output.category"
                from: "input"
        - operations:
          - verb: "get"
            path: "/category/filter/fields"
          execute:
          - map:
              title: "map"
              inputs: {}
              outputs:
                output:
                  schema:
                    $ref: "#/definitions/fieldsResponse"
                  variable: "message.body"
                  content: "application/json"
              actions:
              - set: "output.fields"
                default: "$(message.body)"
              - set: "output.metadata.version"
                default: "$(api_version)"
              - set: "output.metadata.region"
                default: "$(api_region)"
              - set: "output.metadata.requestTime"
                default: "$(request.date)"
        otherwise: []
        version: "1.0.0"
    catch: []
  phase: "realized"
paths:
  /category/filter/fields:
    get:
      responses:
        200:
          description: "200 OK"
      parameters:
      - name: "filter"
        type: "string"
        required: true
        in: "query"
        description: "Category filter"
      - name: "q"
        type: "string"
        required: false
        in: "query"
        description: "Query search"
  /category/{idCategory}:
    get:
      responses:
        200:
          description: "200 OK"
      parameters:
      - name: "idCategory"
        type: "string"
        required: true
        in: "path"
        description: "Category identification"
  /categories:
    get:
      responses:
        200:
          description: "200 OK"
definitions:
  fieldsResponse:
    properties:
      metadata:
        $ref: "#/definitions/metadata"
      fields:
        type: "object"
    additionalProperties: false
  categoryResponse:
    properties:
      metadata:
        description: "API Metadata"
        $ref: "#/definitions/metadata"
      category:
        type: "object"
        description: "Category"
    additionalProperties: false
  categoriesResponse:
    properties:
      metadata:
        description: "Api metadata"
        $ref: "#/definitions/metadata"
      categories:
        type: "object"
        description: "Categories array"
    additionalProperties: false
  metadata:
    properties:
      results:
        type: "string"
        description: "Total Items"
        example: "10"
      requestTime:
        type: "string"
        description: "Api Request Time"
        example: "Thu, 24 Nov 2016 15:17:32 Z"
      region:
        type: "string"
        description: "API Region"
        example: "r1"
      version:
        type: "string"
        description: "API Version"
        example: "v1"
    additionalProperties: false
tags: []
