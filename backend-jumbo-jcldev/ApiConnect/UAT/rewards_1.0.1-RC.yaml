---
swagger: "2.0"
info:
  x-ibm-name: "rewards"
  title: "Rewards"
  version: "1.0.1-RC"
schemes:
- "https"
host: "$(catalog.host)"
basePath: "/rewards/r1/v1"
consumes:
- "application/json"
produces:
- "application/json"
securityDefinitions:
  x-ibm-client-secret:
    type: "apiKey"
    description: ""
    in: "header"
    name: "X-IBM-Client-Secret"
  clientIdHeader:
    type: "apiKey"
    in: "header"
    name: "X-IBM-Client-Id"
security:
- clientIdHeader: []
  x-ibm-client-secret: []
x-ibm-configuration:
  testable: true
  enforced: true
  cors:
    enabled: true
  assembly:
    execute:
    - set-variable:
        title: "set-api-variables"
        actions:
        - value: "v1"
          add: "api_version"
        - value: "r1"
          add: "api_region"
        version: "1.0.0"
    - set-variable:
        title: "set-base-url"
        actions:
        - value: "https://cencouat-bonus-service.mybluemix.net"
          add: "base_url"
        version: "1.0.0"
    - set-variable:
        title: "set-http-credentials"
        actions:
        - value: "cencoappuser"
          add: "http_user"
        - value: "HjztW7dQL7Y8XJ5cZbpfgMHb"
          add: "http_pass"
        version: "1.0.0"
    - if:
        title: "validate-numdoc"
        condition: "!$(request.parameters.numdoc)"
        execute:
        - throw:
            title: "throw"
            version: "1.0.0"
            name: "NotFound"
            message: "Document Not Found"
        version: "1.0.0"
    - if:
        title: "validate-doctype"
        condition: "!$(request.parameters.doctype)"
        execute:
        - throw:
            title: "throw"
            version: "1.0.0"
            name: "BadRequest"
            message: "Invalid Document Type"
        version: "1.0.0"
    - invoke:
        title: "invoke"
        timeout: 15
        verb: "GET"
        cache-response: "protocol"
        cache-ttl: 900
        stop-on-error:
        - null
        version: "1.0.0"
        target-url: "$(base_url)/bonus-api/bonus/$(request.parameters.numdoc)?doctype=$(request.parameters.doctype)"
        username: "$(http_user)"
        password: "$(http_pass)"
    - map:
        title: "map"
        inputs:
          input:
            schema:
              type: "object"
            variable: "message.body"
        outputs:
          output:
            schema:
              $ref: "#/definitions/bonusResponse"
            variable: "message.body"
        actions:
        - set: "output.points"
          from: "input"
        - set: "output.metadata.requestTime"
          default: "$(request.date)"
        - set: "output.metadata.region"
          default: "$(api_region)"
        - set: "output.metadata.version"
          default: "$(api_version)"
        version: "1.0.0"
    catch:
    - errors:
      - "NotFound"
      execute:
      - set-variable:
          title: "set-not-found"
          actions:
          - set: "message.body"
            value: "{ \\\"httpCode\\\":\\\"404\\\", \\\"httpMessage\\\":\"Not Found\"\
              , \\\"moreInformation\\\":\\\"Resource not found\\\" }"
          - set: "message.status.code"
            value: "404"
          - set: "message.headers.content-type"
            value: "application/json"
          version: "1.0.0"
    - errors:
      - "BadRequest"
      execute:
      - set-variable:
          title: "set-bad-request"
          actions:
          - set: "message.body"
            value: "{ \\\"httpCode\\\":\\\"400\\\", \\\"httpMessage\\\":\"Bad Request\"\
              , \\\"moreInformation\\\":\\\"Invalid document type\\\" }"
          - set: "message.status.code"
            value: "400"
          - set: "message.headers.content-type"
            value: "application/json"
          version: "1.0.0"
  phase: "realized"
paths:
  /points/{numdoc}:
    get:
      responses:
        200:
          description: "200 OK"
      parameters:
      - name: "numdoc"
        type: "string"
        required: true
        in: "path"
        description: "Document number"
      - name: "doctype"
        type: "integer"
        required: true
        in: "query"
        description: "Type of document"
        format: "int32"
definitions:
  bonusResponse:
    properties:
      metadata:
        description: "Api metadata"
        $ref: "#/definitions/metadata"
      points:
        type: "object"
        description: "Boonus information"
    additionalProperties: false
  metadata:
    properties:
      requestTime:
        type: "string"
        description: "Api Request Time"
        example: "Thu, 24 Nov 2016 15:17:32 Z"
      region:
        type: "string"
        description: "API Region"
        example: "r1"
      version:
        type: "string"
        description: "API Version"
        example: "v1"
    additionalProperties: false
tags: []
