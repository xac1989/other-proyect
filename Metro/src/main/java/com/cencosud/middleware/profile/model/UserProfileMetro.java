package com.cencosud.middleware.profile.model;

import java.util.Date;
import java.util.Map;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverted;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConvertedEnum;
import com.cencosud.middleware.profile.converter.AttributesConverter;
import com.cencosud.middleware.profile.converter.FavoritesConverter;
import com.cencosud.middleware.profile.converter.UserConfigurationConverter;
import com.cencosud.middleware.profile.model.enums.DocumentTypeEnum;
import com.cencosud.middleware.profile.model.enums.GenderEnum;
import com.fasterxml.jackson.annotation.JsonFormat;

@DynamoDBTable(tableName = "pe_metro_user_profile")
public class UserProfileMetro {

	private String userProfileId;

	private String displayName;

	private String fullName;

	private String phoneNumber;

	private String id;

	private String document;

	private String socialNetworkId;
	
	private String email;
	
	private String profilePicture;

	private Date birthDate;

	private Date creationDate;

	private boolean modified;

	private GenderEnum gender;

	private DocumentTypeEnum documentType;

	private Map<String, String> attributes;

	private Favorites favorites;

	private UserConfiguration configurations;

	public UserProfileMetro() {

	}

	public UserProfileMetro(UserProfileMetro userProfileMetro) {
		this.birthDate = userProfileMetro.getBirthDate() == null ? new Date(0) : userProfileMetro.getBirthDate();
		this.creationDate = userProfileMetro.getCreationDate() == null ? new Date() : userProfileMetro.getCreationDate();
		this.displayName = userProfileMetro.getDisplayName() == null ? "" : userProfileMetro.getDisplayName();
		this.document = userProfileMetro.getDocument() == null ? "" : userProfileMetro.getDocument();
		this.documentType = userProfileMetro.getDocumentType() == null ? DocumentTypeEnum.DNI : userProfileMetro.getDocumentType();
		this.email = userProfileMetro.getEmail() == null ? "" : userProfileMetro.getEmail();
		this.fullName = userProfileMetro.getFullName() == null ? "" : userProfileMetro.getFullName();
		this.gender = userProfileMetro.getGender() == null ? GenderEnum.UNDEFINED : userProfileMetro.getGender();
		this.phoneNumber = userProfileMetro.getPhoneNumber() == null ? "" : userProfileMetro.getPhoneNumber();
		this.profilePicture = userProfileMetro.getProfilePicture() == null ? "" : userProfileMetro.getProfilePicture();
		this.socialNetworkId = userProfileMetro.getSocialNetworkId() == null ? "" : userProfileMetro.getSocialNetworkId();
		this.userProfileId = userProfileMetro.getUserProfileId() == null ? "" : userProfileMetro.getUserProfileId();
	}

	@DynamoDBAttribute(attributeName = "_id")
	@DynamoDBAutoGeneratedKey
	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@DynamoDBAttribute(attributeName = "document")
	public String getDocument() {
		return document;
	}

	public void setDocument(String document) {
		this.document = document;
	}

	@DynamoDBTypeConvertedEnum
	@DynamoDBAttribute(attributeName = "documentType")
	public DocumentTypeEnum getDocumentType() {
		return documentType;
	}

	public void setDocumentType(DocumentTypeEnum documentType) {
		this.documentType = documentType;
	}

	@DynamoDBHashKey(attributeName = "userProfileId")
	public String getUserProfileId() {
		return userProfileId;
	}

	public void setUserProfileId(String userProfileId) {
		this.userProfileId = userProfileId;
	}

	@DynamoDBAttribute(attributeName = "displayName")
	public String getDisplayName() {
		return displayName;
	}

	public void setDisplayName(String displayName) {
		this.displayName = displayName;
	}

	@DynamoDBAttribute(attributeName = "fullName")
	public String getFullName() {
		return fullName;
	}

	public void setFullName(String fullName) {
		this.fullName = fullName;
	}

	@DynamoDBTypeConvertedEnum
	@DynamoDBAttribute(attributeName = "gender")
	public GenderEnum getGender() {
		return gender;
	}

	public void setGender(GenderEnum gender) {
		this.gender = gender;
	}

	@DynamoDBAttribute(attributeName = "phoneNumber")
	public String getPhoneNumber() {
		return phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
	@DynamoDBAttribute(attributeName = "birthDate")
	public Date getBirthDate() {
		return birthDate;
	}

	public void setBirthDate(Date birthDate) {
		this.birthDate = birthDate;
	}

	@DynamoDBTypeConverted(converter = AttributesConverter.class)
	public Map<String, String> getAttributes() {
		return attributes;
	}

	public void setAttributes(Map<String, String> attributes) {
		this.attributes = attributes;
	}

	@DynamoDBTypeConverted(converter = FavoritesConverter.class)
	public Favorites getFavorites() {
		return favorites;
	}

	public void setFavorites(Favorites favorites) {
		this.favorites = favorites;
	}

	@DynamoDBTypeConverted(converter = UserConfigurationConverter.class)
	public UserConfiguration getConfigurations() {
		return configurations;
	}

	public void setConfigurations(UserConfiguration configurations) {
		this.configurations = configurations;
	}

	@DynamoDBAttribute(attributeName = "modified")
	public boolean isModified() {
		return modified;
	}

	public void setModified(boolean modified) {
		this.modified = modified;
	}

	@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
	@DynamoDBAttribute(attributeName = "creationDate")
	public Date getCreationDate() {
		return creationDate;
	}

	public void setCreationDate(Date creationDate) {
		this.creationDate = creationDate;
	}

	@DynamoDBAttribute(attributeName = "socialNetworkId")
	public String getSocialNetworkId() {
		return socialNetworkId;
	}

	public void setSocialNetworkId(String socialNetworkId) {
		this.socialNetworkId = socialNetworkId;
	}

	@DynamoDBAttribute(attributeName = "email")
	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@DynamoDBAttribute(attributeName = "profilePicture")
	public String getProfilePicture() {
		return profilePicture;
	}

	public void setProfilePicture(String profilePicture) {
		this.profilePicture = profilePicture;
	}

}
